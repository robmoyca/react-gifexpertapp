{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","querySelector"],"mappings":"2MAmCeA,EAhCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAiBrC,OACQ,0BAAMC,SAXO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAOV,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAnBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACjC,OACI,yBAAKc,UAAU,0CACZ,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFFO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,IAEIC,EDbyBK,CAAa1B,GAAhCa,EAFsB,EAE5BN,KAAca,EAFc,EAEdA,QAErB,OACI,oCACI,wBAAIJ,UAAU,qCAAqChB,GAElDoB,GAAW,uBAAGJ,UAAU,oCAAb,WAEZ,yBAAKA,UAAU,YAEPH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,UEmBjBkB,EAlCM,WAAM,MAGa1C,mBAAS,CAAC,SAHvB,mBAGhB2C,EAHgB,KAGJ5C,EAHI,KAcvB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI2B,IAAK3B,EACLA,SAAUA,U,MCxBtC8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,cAAc,W","file":"static/js/main.7b44a8da.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('');\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(inputValue.trim().length > 2){\n            setCategories( cats => [inputValue, ...cats]);\n            setInputValue('');\n        }\n\n        \n    }\n    return (\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    value={ inputValue }\n                    onChange={ handleInputChange }\n                />\n            </form>\n    );\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;\n","export const getGifs = async(category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=nzXdHe3CzZohRjONfEA0VzhJrR0gycch`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id:img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    return gifs;\n}\n","import React from 'react'\n\nexport const GifGridItem = ( {title, url} ) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n           <img src={url} alt={title} />\n           <p>{title}</p>\n        </div>\n    )\n}\n","import React, {useState, useEffect} from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n    const {data: images, loading} = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n\n            <div className=\"cardGrid\">\n                { \n                    images.map( img => (\n                        <GifGridItem \n                            key={img.id}    \n                            {...img }\n                        />\n                    ))\n                }\n            </div>\n        </>\n        \n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(()=>{\n        getGifs(category)\n            .then(imgs => {\n                setstate({\n                    data: imgs,\n                    loading: false\n                });\n            });\n    }, []);\n\n    return state; \n}\n\n\n","import React, {useState} from 'react'\nimport AddCategory from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\n    const [categories, setCategories] = useState(['Goku']);\n\n    // const handleAdd = (e) => {\n    //     //Dos alternativas, ambas implican copiar el arreglo con ...categories\n    //     setCategories( [...categories, 'SuperCampeones']);\n    //     //setCategories( cats => [...categories, 'Suppp']);\n\n    // }\n\n\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr />\n\n            <ol>\n                { \n                    categories.map( category => (\n                        <GifGrid \n                            key={category}\n                            category={category} \n                        />\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css'\n\nReactDOM.render(\n  <GifExpertApp />, \n  document.querySelector('#root')\n);\n"],"sourceRoot":""}